VGG(
  (features): Sequential(
    (0): Conv2D(3, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (1): BatchNorm2D(num_features=64, momentum=0.9, epsilon=1e-05)
    (2): ReLU()
    (3): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (4): BatchNorm2D(num_features=64, momentum=0.9, epsilon=1e-05)
    (5): ReLU()
    (6): MaxPool2D(kernel_size=2, stride=2, padding=0)
    (7): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (8): BatchNorm2D(num_features=128, momentum=0.9, epsilon=1e-05)
    (9): ReLU()
    (10): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (11): BatchNorm2D(num_features=128, momentum=0.9, epsilon=1e-05)
    (12): ReLU()
    (13): MaxPool2D(kernel_size=2, stride=2, padding=0)
    (14): Conv2D(128, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (15): BatchNorm2D(num_features=256, momentum=0.9, epsilon=1e-05)
    (16): ReLU()
    (17): Conv2D(256, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (18): BatchNorm2D(num_features=256, momentum=0.9, epsilon=1e-05)
    (19): ReLU()
    (20): Conv2D(256, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (21): BatchNorm2D(num_features=256, momentum=0.9, epsilon=1e-05)
    (22): ReLU()
    (23): Conv2D(256, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (24): BatchNorm2D(num_features=256, momentum=0.9, epsilon=1e-05)
    (25): ReLU()
    (26): MaxPool2D(kernel_size=2, stride=2, padding=0)
    (27): Conv2D(256, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (28): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (29): ReLU()
    (30): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (31): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (32): ReLU()
    (33): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (34): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (35): ReLU()
    (36): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (37): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (38): ReLU()
    (39): MaxPool2D(kernel_size=2, stride=2, padding=0)
    (40): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (41): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (42): ReLU()
    (43): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (44): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (45): ReLU()
    (46): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (47): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (48): ReLU()
    (49): Conv2D(512, 512, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (50): BatchNorm2D(num_features=512, momentum=0.9, epsilon=1e-05)
    (51): ReLU()
    (52): MaxPool2D(kernel_size=2, stride=2, padding=0)
  )
  (avgpool): AdaptiveAvgPool2D(output_size=(7, 7))
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=4096, dtype=float32)
    (1): ReLU(name=True)
    (2): Dropout(p=0.5, axis=None, mode=upscale_in_train)
    (3): Linear(in_features=4096, out_features=4096, dtype=float32)
    (4): ReLU(name=True)
    (5): Dropout(p=0.5, axis=None, mode=upscale_in_train)
    (6): Linear(in_features=4096, out_features=1000, dtype=float32)
  )
)